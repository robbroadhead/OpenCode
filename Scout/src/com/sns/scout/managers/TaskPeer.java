package com.sns.scout.managers;

import java.util.Iterator;
import java.util.List;
import com.sns.util.*;

import org.apache.torque.util.Criteria;

/** 
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Thu Jul 26 15:58:51 CDT 2007]
 *
 *  You should add additional methods to this class to meet the
 *  application requirements.  This class will only be generated as
 *  long as it does not already exist in the output directory.
 */
public class TaskPeer 
    extends com.sns.scout.managers.BaseTaskPeer
{
	/**
	 * This returns a list of Task objects where each 
	 * Task object maps to a row in the database. This is primarily
	 * for drop down lists in the GUI or Task listings. 
	 * 
	 * @return Task[] 
	 */
	static public Task [] getTasksByProject(int projectId) {
		Task theList[] = null;
		int count=0;
		
		Criteria crit = new Criteria();

		try {
			crit.add(TaskPeer.PROJECTID,projectId);
			List result = TaskPeer.doSelect(crit);
			Iterator it = result.iterator();
			theList = new Task[result.size()];
			
			while (it.hasNext()) {
				theList[count++] = (Task) it.next();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return theList;
	}
	
	static public List getOpenTasks() {
		List theList = null;	
		Criteria crit = new Criteria();

		try {
			crit.add(TaskPeer.STATUSID,103,Criteria.NOT_EQUAL);
			Utility.LOG.info(crit.toString());
			theList = TaskPeer.doSelect(crit);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return theList;
	}
	
	static public List getMyTasks(int id) {
		List theList = null;	
		Criteria crit = new Criteria();

		try {
			crit.add(TaskPeer.STATUSID,103,Criteria.NOT_EQUAL);
			crit.add(TaskPeer.OWNERID,id,Criteria.EQUAL);
			Utility.LOG.info(crit.toString());
			theList = TaskPeer.doSelect(crit);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return theList;
	}

}
